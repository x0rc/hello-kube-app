
# This workflow will build a docker container, publish it to ECR Container Registry, 
# and deploy it to the k8s cluster when a release is created.
#
# To configure this workflow:
#
# 1. Ensure that your repository contains a Dockerfile
# 2. Create secrets in your repository:
# GHTOKEN
# WEBHOOK (slack webhook)
# AWS_ACCESS_KEY_ID
# AWS_SECRET_ACCESS_KEY

name: Hello k8s App

on: 
  push:
    branches:
      - main
    paths:
      - 'hello-kube-app1/**'
  workflow_dispatch:
    name:
      description: 'Any modification in ./hello-kube-app1' 

jobs:
  setup-build-publish-deploy:
    name: Development Build & Deploy Hello-Kube
    runs-on: ubuntu-latest
    environment: development
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Starting Build & Push  Status Slack Notification
      uses: ravsamhq/notify-slack-action@v2
      if: always()
      with:
        status: ${{ job.status }}
        token: ${{ secrets.GHTOKEN }}
        notification_title: "Starting to Build hello-kubernetes"
        notify_when: "failure, success, warning"
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.WEBHOOK }}

    - name: Generate build number
      uses: einaregilsson/build-number@v3
      with:
        token: ${{ secrets.GHTOKEN }}  

    - name: Print new build number
      run: echo "Build number is $BUILD_NUMBER"

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    # Build the Docker image
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: hello-kube
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$BUILD_NUMBER ./hello-kube-app1
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$BUILD_NUMBER

    - name: Starting Build & Push  Status Slack Notification
      uses: ravsamhq/notify-slack-action@v2
      if: always()
      with:
        status: ${{ job.status }}
        token: ${{ secrets.GHTOKEN }}
        notification_title: "Docker Build & Push Status: {status_message}"
        message_format: "{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}>"
        footer: "Linked Repo <{repo_url}|{repo}> | <{workflow_url}|View Workflow>"
        notify_when: "failure, success, warning"
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.WEBHOOK }}

    - name: Invoke Hello-Kubernetes Infra GitOps pipe
      run: |
          curl -H "Accept: application/vnd.github.everest-preview+json" \
          -H "Authorization: token ${{secrets.API_TOKEN_GITHUB}}" \
          --request POST \
          --data '{"event_type": "update-hello-kubernetes-build-number", "client_payload": { "buildnumber": "'"$BUILD_NUMBER"'" }}' \
          https://api.github.com/repos/x0rc/hello-kube-infra/dispatches

    - name: Invoked Infra Workflow Slack Notification
      uses: ravsamhq/notify-slack-action@v2
      if: always()
      with:
        status: ${{ job.status }}
        token: ${{ secrets.GHTOKEN }}
        notification_title: "Infra Workflow trigger Status: {status_message}"
        message_format: "{emoji} *{workflow}* {status_message} in <{repo_url}|{repo}>"
        footer: "Linked Repo <{repo_url}|{repo}> | <{workflow_url}|View Workflow>"
        notify_when: "failure, success, warning"
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.WEBHOOK }}