name: "When updates are pushed or the defined schedule is triggered, scan the container and application for vulnerabilities"

on:

  push:

  schedule:
    - cron: '0 0 * * *'   # “At 00:00.”

jobs:

  scan-and-report-vulnerabilities:
    
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16.0
  
    - name: Run Trivy vulnerability scanner
      env:
        ECR_REGISTRY: vuln-checker.de
        ECR_REPOSITORY: hello-kube
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./hello-kube-app1
        curl -L https://github.com/aquasecurity/trivy/releases/download/v0.33.0/trivy_0.33.0_Linux-64bit.tar.gz | tar xvzf - contrib trivy
        chmod 755 trivy
        mv trivy /usr/local/bin/trivy
        trivy image --format template --format sarif --output trivy-results.sarif $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    
    - name: Upload container results to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: trivy-results.sarif

    - name: Run Trivy to generate report for slack Notification
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        input: '.'
        ignore-unfixed: true
        format: json
        output: 'results.json'
        # Ignoring the go.sum file as it may contain the older dependencies entries which are not being used now.
        skip-dirs: 'go.sum'

    - name: Create Issues Summary
      run: |
        summary=$(jq '.[] | select(.Vulnerabilities) | .Vulnerabilities | group_by(.Severity) | map({Severity: .[0].Severity, Count: length}) | tostring' results.json | tr -d \\)
        if [ -z $summary ]
        then
          summary="0 Issues"
        fi
        echo "SUMMARY=$summary" >> $GITHUB_ENV